/* https://leetcode.com/problems/divide-array-into-equal-pairs/description/ */

import java.util.HashMap;
import java.util.Map;

public class Solution {

	public static boolean divideArray(int[] nums) {

    //map으로 풀어보기
		Map<Integer, Integer> map = new HashMap<Integer, Integer>();

    //return 값 정의
		boolean answer = true;

    //for문으로 key 값에 배열의 각 숫자들 / value 값에 key 값이 몇 번 중복 됐는지 
		for (Integer num : nums) {
      //중복됐으면 value +1 해서 몇 번 중복 됐는지 추가 
			if (map.containsKey(num)) {
				int oldVal = map.get(num);
				map.put(num, oldVal + 1);
			} else {
        //그게 아니면 기본 값인 1 지정
				map.put(num, 1);
			}
		}

    //Map.Entry 로 향상된 for문 이용해 모든 value 값 빼기
		for(Map.Entry<Integer, Integer> entry : map.entrySet()) {
      //만약 value 값이 짝수면 true 유지
			if(entry.getValue() % 2 == 0) {
				answer = true;
			} else {
        //value 값중 하나라도 홀 수 인경우 바로 false로 리턴해 종료
				return answer = false;
			}
		}

		return answer;
	}

	public static void main(String[] args) {

		int[] nums = {15,1,4,8,12,11,4,10,4,10,10,15,20,7};

		System.out.println(divideArray(nums));

	}

}
