/* 프로그래머스 java 난이도: 0 / 문자 개수 세기 / https://school.programmers.co.kr/learn/courses/30/lessons/181902 */


/*
문제
알파벳 대소문자로만 이루어진 문자열 my_string이 주어질 때, 
my_string에서 'A'의 개수, my_string에서 'B'의 개수,..., my_string에서 'Z'의 개수, my_string에서 'a'의 개수, my_string에서 'b'의 개수,..., 
my_string에서 'z'의 개수를 순서대로 담은 길이 52의 정수 배열을 return 하는 solution 함수를 작성해 주세요.
*/

import java.util.ArrayList;

public class Solution {

	public static int[] solution(String my_string) {
		
        int[] answer = {};
        String[] strArr = my_string.split("");		//매개 문자열을 배열로 변환	
        
        ArrayList<String> list = new ArrayList<String>();  //a-Z 까지 담을 list 생성
        
        //대문자 먼저 담아주고
        for(char i ='A'; i <= 'Z'; i++) {
        	list.add(Character.toString(i));
        }
        
        //소문자 담아주기
        for(char i ='a'; i <= 'z'; i++) {
        	list.add(Character.toString(i));
        }
        
        //answer 의 배열을 list 크기 만큼 재정의 / 왜? 최종적으로 답을 return 해야하니깐
        answer = new int[list.size()];
        
        //strArr을 알파벳이 담겨있는거에 검증하는거니깐 strArr의 배열만큼 첫 for문 감싸기
        for(int i=0; i < strArr.length; i++) {
        	
        	//strArr 첫번째 배열 부터 모든 알파벳(list.get())을 검증해야 해서 두번째로 list.size() 만큼 for문 진행
        	for(int y=0; y < list.size(); y++) {
        		
        		//strArr의 알파벳이 일치하면 1씩 카운팅
        		if(strArr[i].equals(list.get(y))) {
        			
        			answer[y] += 1;
        			
        		} else {
        			//그게 아니라면 answer[y] = 0 으로 하는 경우 기존의 1 되어있는 값도 없어지니깐 
        			//Math.max로 비교해서 기존의 값이 이미 카운팅 됐으면
        			//중복 카운팅 돼야하니깐 0보다 높은 수를 넣어 기존의 값이 0으로 초기화 되는걸 방지
        			answer[y] = Math.max(0, answer[y]);
        			
        		}
 
        	}
        	
        }
        
        return answer;
        
    }
	
	public static void main(String[] args) {
		System.out.println(solution("Programmers")); 
		
		
	}

}
