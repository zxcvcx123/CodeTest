/* 프로그래머스 java 난이도: 0 / 옹알이(1) / https://school.programmers.co.kr/learn/courses/30/lessons/120956 */

/*
문제
머쓱이는 태어난 지 6개월 된 조카를 돌보고 있습니다. 
조카는 아직 "aya", "ye", "woo", "ma" 네 가지 발음을 최대 한 번씩 사용해 조합한(이어 붙인) 발음밖에 하지 못합니다. 
문자열 배열 babbling이 매개변수로 주어질 때, 
머쓱이의 조카가 발음할 수 있는 단어의 개수를 return하도록 solution 함수를 완성해주세요.
*/

/* 
   나같은 경우 처음에 모든 경우의 수를 계산해 풀려고 시도(순열)
   하지만 수학이 약해 시도 해보다 실패하고 다른 방법을 생각해봄
   생각하다보니 speak[] 배열의 값에 있는걸 들어오는 배열에 순차적으로 대입해 speak[]배열의 글만 다지우면 
   찌꺼기가 남아 있는 경우는 조건에 해당이 안되고 찌꺼기가 없는 경우 조건에 해당 되기에 찌꺼기만 남기고
   length()를 통해 0인경우 카운팅하게 끔 시도
   아래와 같이 시도 끝에 성공
*/

public class Solution {
	
	
	public static int solution(String[] babbling) {
		int pos = 0;
		int a = 0;
		int answer = 0;
		
    	/* 고정적으로 확인할 값을 배열로 만들어주고 */
        String[] speak = {"aya","ye","woo","ma"};
        
        /* 들어올 (babbling[])배열과 비교해야할 고정 배열(speak[])을 for문으로 각 데이터를 뽑고 */
        /* babbling[] 배열안에 글자중 speak[] 글자가 포함되어 있으면 (matches)메소드로 검증 */
        /* replace로 겹치는 글자를 공백으로 바꿔준다. */
        /* why? 그냥 다 없애버리면 wyeoo << 같은 경우 ye가 없어지고 woo가 붙으면서 woo도 없어짐 이러면 안됨! */
        /* babbling[]배열의 위치를 바꿔줘야 하니 pos++ 로 위치이동 */
        for(int i=0; i < babbling.length; i++) {
        	for(int y=0; y < speak.length; y++) {
        		if(babbling[pos].matches("speak[y]") == false) {
        			babbling[pos] = babbling[pos].replace(speak[y], " ");
        		}
        	}pos++;
        }
        
        /* 그리고 이제 for문을 통해 공백을 지우고 글자수를 검증해 0인경우 answer 를 카운팅해서 정답을 도출 */
        for(int i=0; i < babbling.length; i++) {
        	babbling[i] = babbling[i].replace(" ","");
        	if(babbling[i].length() == 0) {
        		answer ++;
        	}
        }
        
        System.out.println(answer);
        
        return answer;
        
//        babbling[0] = babbling[0].replace(speak[0], "");
//        babbling[0] = babbling[0].replace(speak[1], "");
//        babbling[0] = babbling[0].replace(speak[2], "");
//        babbling[0] = babbling[0].replace(speak[3], "");
//        
//        babbling[1] = babbling[1].replace(speak[0], "");
//        babbling[1] = babbling[1].replace(speak[1], "");
//        babbling[1] = babbling[1].replace(speak[2], "");
//        babbling[1] = babbling[1].replace(speak[3], "");
//        
//        babbling[2] = babbling[2].replace(speak[0], "");
//        babbling[2] = babbling[2].replace(speak[1], "");
//        babbling[2] = babbling[2].replace(speak[2], "");
//        babbling[2] = babbling[2].replace(speak[3], "");
//        
//        babbling[3] = babbling[3].replace(speak[0], "");
//        babbling[3] = babbling[3].replace(speak[1], "");
//        babbling[3] = babbling[3].replace(speak[2], "");
//        babbling[3] = babbling[3].replace(speak[3], "");
//        
//        babbling[4] = babbling[4].replace(speak[0], "");
//        babbling[4] = babbling[4].replace(speak[1], "");
//        babbling[4] = babbling[4].replace(speak[2], "");
//        babbling[4] = babbling[4].replace(speak[3], "");
        
//        System.out.println(babbling[0]);
//        System.out.println(babbling[1]);
//        System.out.println(babbling[2]);
//        System.out.println(babbling[3]);
//        System.out.println(babbling[4]);
        
    }
	
	
	public static void main(String[] args) {
		
		String[] babbling = {"aya", "yee", "u", "maa", "wyeoo"};
		
		System.out.println(solution(babbling));
		//solution(babbling);
		
		
		
	}

}
